swagger: "2.0"
info:
  version: "1.0.0"
  title: "Edustipend API"
  description: "API documentation for Edustipend"
tags:
  - name: "Authentication"
    description: "Everything about register, login, and sign in."
  - name: "Users"
    description: "Operations related to users"

paths:
  /users/register:
    post:
      tags:
        - "Authentication"
      summary: "Register a new user"
      description: "Register a new user with provided details"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "User object that needs to be registered"
          required: true
          schema:
            type: "object"
            properties:
              email:
                type: "string"
                format: "email"
              firstName:
                type: "string"
              lastName:
                type: "string"
              password:
                type: "string"
              role:
                type: "string"
                enum: ["admin", "user"]
              profilePicture:
                type: "string"
              bio:
                type: "string"
              address:
                type: "string"
              phoneNumber:
                type: "string"
      responses:
        201:
          description: "User registered successfully"
        400:
          description: "Bad request, missing required fields or invalid data"

  /users/login:
    post:
      tags:
        - "Authentication"
      summary: "Login"
      description: "Authenticate and login a user"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "User credentials for login"
          required: true
          schema:
            type: "object"
            properties:
              email:
                type: "string"
                format: "email"
              password:
                type: "string"
      responses:
        200:
          description: "Login successful"
        401:
          description: "Unauthorized, invalid credentials"

  /users/:
    get:
      tags:
        - "Users"
      summary: "Get All Users"
      description: "Admin gets all users"
      produces:
        - "application/json"
      parameters:
        - name: "Authorization"
          in: "header"
          description: "JWT authorization token"
          required: true
          type: "string"
      responses:
        200:
          description: "Users fetched successful"
        401:
          description: "Unauthorized, invalid credentials"

  /users/current:
    get:
      tags:
        - "Users"
      summary: "Get current user"
      description: "Fetch current user details"
      produces:
        - "application/json"
      parameters:
        - name: "Authorization"
          in: "header"
          description: "JWT authorization token"
          required: true
          type: "string"
      responses:
        200:
          description: "User fetched successful"
        401:
          description: "Unauthorized, invalid credentials"

  /users/{id}:
    get:
      tags:
        - "Users"
      summary: "Get a user"
      description: "Fetch a specific user details with user Id"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "User ID"
          required: true
          type: "string"
        - name: "Authorization"
          in: "header"
          description: "JWT authorization token"
          required: true
          type: "string"
      responses:
        200:
          description: "User fetched successful"
        401:
          description: "Unauthorized, invalid credentials"
